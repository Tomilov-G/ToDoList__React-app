@charset "UTF-8";
/**
  Нормализация блочной модели
 */
*,
::before,
::after {
  box-sizing: border-box;
}

/**
   Убираем внутренние отступы слева тегам списков,
   у которых есть атрибут class
  */
:where(ul, ol):where([class]) {
  padding-left: 0;
}

/**
   Убираем внешние отступы body и двум другим тегам,
   у которых есть атрибут class
  */
body,
:where(blockquote, figure):where([class]) {
  margin: 0;
}

body {
  background: #005aa7;
  background: linear-gradient(to right, #005aa7, #fffde4);
}

/**
   Убираем внешние отступы вертикали нужным тегам,
   у которых есть атрибут class
  */
:where(h1, h2, h3, h4, h5, h6, p, ul, ol, dl):where([class]) {
  margin-block: 0;
}

:where(dd[class]) {
  margin-left: 0;
}

:where(fieldset[class]) {
  margin-left: 0;
  padding: 0;
  border: none;
}

/**
   Убираем стандартный маркер маркированному списку,
   у которого есть атрибут class
  */
:where(ul[class]) {
  list-style: none;
}

:where(address[class]) {
  font-style: normal;
}

/**
   Обнуляем вертикальные внешние отступы параграфа,
   объявляем локальную переменную для внешнего отступа вниз,
   чтобы избежать взаимодействие с более сложным селектором
  */
p {
  --paragraphMarginBottom: 24px;
  margin-block: 0;
}

/**
   Внешний отступ вниз для параграфа без атрибута class,
   который расположен не последним среди своих соседних элементов
  */
p:where(:not([class]):not(:last-child)) {
  margin-bottom: var(--paragraphMarginBottom);
}

/**
   Упрощаем работу с изображениями и видео
  */
img,
video {
  display: block;
  max-width: 100%;
  height: auto;
}

/**
   Наследуем свойства шрифт для полей ввода
  */
input,
textarea,
select,
button {
  font: inherit;
}

html {
  /**
     Пригодится в большинстве ситуаций
     (когда, например, нужно будет "прижать" футер к низу сайта)
    */
  height: 100%;
  /**
     Убираем скачок интерфейса по горизонтали
     при появлении / исчезновении скроллбара
    */
  scrollbar-gutter: stable;
}

/**
   Плавный скролл
  */
html,
:has(:target) {
  scroll-behavior: smooth;
}

body {
  /**
     Пригодится в большинстве ситуаций
     (когда, например, нужно будет "прижать" футер к низу сайта)
    */
  min-height: 100%;
  /**
     Унифицированный интерлиньяж
    */
  line-height: 1.5;
}

/**
   Нормализация высоты элемента ссылки при его инспектировании в DevTools
  */
a:where([class]) {
  display: inline-flex;
}

/**
   Курсор-рука при наведении на элемент
  */
button,
label {
  cursor: pointer;
}

@font-face {
  font-family: "LilitaOne";
  src: url("./fonts/LilitaOne_Regular.ttf") format("truetype");
  font-weight: 400;
}
@font-face {
  font-family: "DMSans";
  src: url("./fonts/DMSans_Regular.ttf") format("truetype");
  font-weight: 400;
}
.todo__form {
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  height: 100%;
  position: relative;
  margin-bottom: 60px;
}
.todo__form__label {
  font-family: "DMSans";
  color: white;
}
.todo__form__input {
  opacity: 0.5;
  height: 40px;
  width: 100%;
  border-radius: 8px 30px 30px 8px;
  border: none;
}
.todo__form__icon {
  position: absolute;
  right: 0px;
  top: 37%;
  font-size: 40px;
  color: rgb(91, 186, 91);
  cursor: pointer;
}
.todo__form__icon:hover {
  color: #007bff;
}

.ToDo-App .container {
  padding-block: 10px;
  padding-inline: 10px;
}
.ToDo-App .container__inner {
  text-align: center;
}
.ToDo-App .container__inner .title {
  font-family: "LilitaOne";
  color: white;
  font-size: 28px;
}
.ToDo-App .container__inner .title__icon {
  margin-left: 5px;
  color: rgb(117, 241, 117);
}/*# sourceMappingURL=main.css.map */